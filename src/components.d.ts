/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GcBoard {
        "ghosts": any[];
        "options": { order: boolean; zoom: number; style: { texture: boolean; }; };
        "overlay": any[];
        "size": number;
        "state": any[];
    }
    interface GcComments {
        "path": any[];
        "position": number;
    }
    interface GcControls {
        "data": any;
        "history": any[];
        "options": any;
        "position": number;
        "score": any;
        "variations": any;
    }
    interface GcGoban {
        "currentPosition": number;
        "options": any;
        "sgf": any;
    }
    interface GcTree {
        "current": any[];
        "position": number;
        "tree": any[];
        "variations": any[];
    }
}
declare global {
    interface HTMLGcBoardElement extends Components.GcBoard, HTMLStencilElement {
    }
    var HTMLGcBoardElement: {
        prototype: HTMLGcBoardElement;
        new (): HTMLGcBoardElement;
    };
    interface HTMLGcCommentsElement extends Components.GcComments, HTMLStencilElement {
    }
    var HTMLGcCommentsElement: {
        prototype: HTMLGcCommentsElement;
        new (): HTMLGcCommentsElement;
    };
    interface HTMLGcControlsElement extends Components.GcControls, HTMLStencilElement {
    }
    var HTMLGcControlsElement: {
        prototype: HTMLGcControlsElement;
        new (): HTMLGcControlsElement;
    };
    interface HTMLGcGobanElement extends Components.GcGoban, HTMLStencilElement {
    }
    var HTMLGcGobanElement: {
        prototype: HTMLGcGobanElement;
        new (): HTMLGcGobanElement;
    };
    interface HTMLGcTreeElement extends Components.GcTree, HTMLStencilElement {
    }
    var HTMLGcTreeElement: {
        prototype: HTMLGcTreeElement;
        new (): HTMLGcTreeElement;
    };
    interface HTMLElementTagNameMap {
        "gc-board": HTMLGcBoardElement;
        "gc-comments": HTMLGcCommentsElement;
        "gc-controls": HTMLGcControlsElement;
        "gc-goban": HTMLGcGobanElement;
        "gc-tree": HTMLGcTreeElement;
    }
}
declare namespace LocalJSX {
    interface GcBoard {
        "ghosts"?: any[];
        "onMoveAttempt"?: (event: CustomEvent<any>) => void;
        "options"?: { order: boolean; zoom: number; style: { texture: boolean; }; };
        "overlay"?: any[];
        "size"?: number;
        "state"?: any[];
    }
    interface GcComments {
        "onAddComment"?: (event: CustomEvent<any>) => void;
        "path"?: any[];
        "position"?: number;
    }
    interface GcControls {
        "data"?: any;
        "history"?: any[];
        "onDownload"?: (event: CustomEvent<any>) => void;
        "onOptionChange"?: (event: CustomEvent<any>) => void;
        "onSelectPosition"?: (event: CustomEvent<any>) => void;
        "options"?: any;
        "position"?: number;
        "score"?: any;
        "variations"?: any;
    }
    interface GcGoban {
        "currentPosition"?: number;
        "options"?: any;
        "sgf"?: any;
    }
    interface GcTree {
        "current"?: any[];
        "onSelectPosition"?: (event: CustomEvent<any>) => void;
        "onSelectVariation"?: (event: CustomEvent<any>) => void;
        "position"?: number;
        "tree"?: any[];
        "variations"?: any[];
    }
    interface IntrinsicElements {
        "gc-board": GcBoard;
        "gc-comments": GcComments;
        "gc-controls": GcControls;
        "gc-goban": GcGoban;
        "gc-tree": GcTree;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gc-board": LocalJSX.GcBoard & JSXBase.HTMLAttributes<HTMLGcBoardElement>;
            "gc-comments": LocalJSX.GcComments & JSXBase.HTMLAttributes<HTMLGcCommentsElement>;
            "gc-controls": LocalJSX.GcControls & JSXBase.HTMLAttributes<HTMLGcControlsElement>;
            "gc-goban": LocalJSX.GcGoban & JSXBase.HTMLAttributes<HTMLGcGobanElement>;
            "gc-tree": LocalJSX.GcTree & JSXBase.HTMLAttributes<HTMLGcTreeElement>;
        }
    }
}
