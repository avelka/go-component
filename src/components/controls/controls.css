@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(5em);
  }
  to {
    opacity: 1;
    transform: translateY(0em);
  }
}

@keyframes turn {
  from {
    box-shadow: inset 0 0 0 0 transparent;
  }
  to {
    box-shadow: inset 0px -4em 0 -2px var(--gc-bg-light);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(-2em);
  }
  to {
    opacity: 1;
    transform: translateX(0em);
  }
}

:host {
  display: block;
  font-family: var(--gc-font);
  max-width: var(--gcp-max-boardsize, 100vh);

}
.normal :host {
  position: relative;
}

header {
  display: flex;
  position:relative;
  align-items: center;
  box-shadow: 0 0 1em var(--gc-bg-dark);
  height: 3em;
  z-index: 20;
}

:not(.condensed) header {
  height: auto;
  flex-flow: row wrap;
}

header button {
  height: 3em;
  transition: all ease-in-out .3s;
  flex: 1 0 3em;
}

[data-player] {
  display: flex;
  position:relative;
  align-items: center;
  justify-content: flex-start;
  flex-flow: row nowrap;
  align-self:flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  background: var(--gc-bg-dark);
  border-radius: var(--gc-container-radius);
  color: var(--gc-txt-dark);
  height: 3em;
  padding:0 .5rem;
  flex: 0 0 2rem;
  transition: all ease-in-out .3s;
}
:not(.condensed) [data-player],
.condensed [data-player] :hover {
  flex: 1 0 200px;
}

nav {
  color: var(--gc-txt-light);
  display: flex;
  flex-flow: row wrap-reverse;
}

nav button {
  animation: slideInRight .5s -.5s ease-in-out both;
}

.tablist {
  display: flex;
  background: var(--gc-bg-dark);
  flex-flow: column-reverse;
  overflow: hidden;
  flex: 0 0 48px;
  transition: .3s ease-in-out all;
  max-height: 100%;
}

.tablist :not([data-enabled]) {
  order: 1;
}

.tablist:not(:focus-within),
.tablist:not(:hover) {
  max-height: 40px;
}

.tablist > button {
  flex:1 0 40px;
  width:48px
}

.tablist img {
  filter: invert(1);
}
.condensed .menu {
  position: absolute;
  left: 0;
  right:0;
  bottom:3em;
  height: calc(100% - 3em);
  background: linear-gradient(0, var(--gc-bg-light), transparent 20%);
}
.menu {
  max-width: var(--gcp-max-boardsize, 100vh);
  pointer-events:none;
  overflow: auto;
  background: var(--gc-bg-light);

  transition:all .5s ease-in-out;
  display: flex;
  flex-flow: row;
  align-items: flex-end ;
  transform: translateY(0);
}

.menu[data-hidden] {
  transform: translateY(100%);
}

.menu nav > * {
  pointer-events:auto;
}

.menu:hover,
.menu:focus-within {
  transition:all .3s ease-in-out;
  opacity:1;
}

[data-player][data-isturn] {
  animation: turn .5s ease-in-out forwards;
}

[data-player] .captured {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 1.3rem;
  height: 1.3rem;
  border-radius: 100%;
  font-size: .8em;
  background: var(--gc-bg-light);
  color: var(--gc-txt-light);
  position: relative;
  top: calc(50% - .65rem);
  left: 50%;
}

[data-player] .stone {
  content: '';
  display: inline-block;
  flex-shrink: 0;
  width:2em;
  height: 2em;
  box-shadow: inset 0 0 5px;
  border-radius: 100%;
}
[data-player] .name {
  padding: 0 1em;
  white-space: nowrap;
}

[data-player="BLACK"] .stone {
  background: var(--gc-black-stone-bg);
  box-shadow: var(--gc-black-stone-shadow);
}

[data-player="WHITE"] .stone {
  background: var(--gc-white-stone-bg);
  box-shadow: var(--gc-white-stone-shadow);
}

[data-player="BLACK"] .captured {
  background: var(--gc-white-stone-bg);
  box-shadow: var(--gc-black-stone-shadow);
  color: var(--gc-txt-light);
}

[data-player="WHITE"] .captured {
  background: var(--gc-black-stone-bg);
  box-shadow: var(--gc-white-stone-shadow);
  color: var(--gc-txt-dark);
}

[data-player="WHITE"] {
  flex-flow: row-reverse;
  order: 1;
}

select:focus,
button:focus,
button:hover {
 outline:none;
 box-shadow: inset 0 0 0 2px var(--gc-bg);
 background: var(--gc-bg-light);
 transition: .3s ease-in-out all;
}

button[data-enabled] {
  background: var(--gc-bg);
}
button img {
  opacity: .6;
}
button[data-enabled] img {
  filter: invert(1)
}

.input-control,
button,
select {
  transition: .3s ease-in-out all;
  border:none;
  background: transparent;
  border-radius: var(--container-radius);
  padding:0 5px;
  font-size: 1rem;
}

.input-control,
button {
  width: 2.5em;
  height: 2.5em;
  display: inline-flex;
  border-radius: var(--container-radius);
  align-items: center;
  justify-content: center;
  transition: .3s ease-in-out all;
  box-shadow: inset 0 0 0 0px var(--gc-bg);
}

button[disabled] {
  opacity: .3;
}

.input-control.zoom input {
  width:auto;
  max-width:3em;
  background: transparent;
  border: none;
}
